"""
Django settings for hackerthon project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

import os
import environ
from dotenv import load_dotenv
load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()
environ.Env.read_env(
    env_file=os.path.join(BASE_DIR, '.env')
)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

SECRET_KEY = os.environ.get('DJANGO_KEY')
# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'sass_processor',
    'django_seed',
    'todotodo',
    'mypage',
    'history',
    'alertcenter',
    'accounts.apps.AccountsConfig',

    #allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    #provider
    'allauth.socialaccount.providers.kakao',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'hackerthon.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hackerthon.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ko'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT =  os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'mypage', 'static'),
]
# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SASS_PROCESSOR_ENABLED =  True
SASS_PROCESSOR_ROOT =  os.path.join(BASE_DIR, 'static')

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

LOGIN_REDIRECT_URL = "/todo/"
LOGOUT_REDIRECT_URL = "/todo/"

SITE_ID = 1

ACCOUNT_LOGOUT_ON_GET = True

# 소셜 로그인 버튼 눌렀을 때 확인 페이지 스킵
SOCIALACCOUNT_LOGIN_ON_GET = False

# color들 여기에 추가하기
MAIN_COLORS = [
    {
        'name' : 'black',
        'code' : '#000000',
    },
    {
        'name' : 'pink',
        'code' : '#F7A7BB',
    }
]
KEY_COLORS = [
    {
        'name' : 'whitish gray',
        'modalCode' : '#F5F5F5',
        'bgCode' : '#EAEAEA',
        'textCode' : '#515151',
    },
    {
        'name' : 'pink',
        'modalCode' : '#E2C2C2',
        'bgCode' : '#F8E6E6',
        'textCode' : '#D9A1A1',
    },
    {
        'name' : 'orange',
        'modalCode' : '#FFECCE',
        'bgCode' : '#FFECCE',
        'textCode' : '#E99B1D',
    },
    {
        'name' : 'yellow',
        'modalCode' : '#FFF587',
        'bgCode' : '#FFF9BC',
        'textCode' : '#FFC700',
    },
    {
        'name' : 'light lime',
        'modalCode' : '#F1FDC1',
        'bgCode' : '#F1FDC1',
        'textCode' : '#A1CA00',
    },
    {
        'name' : 'melon',
        'modalCode' : '#D4FDC1',
        'bgCode' : '#D4FDC1',
        'textCode' : '#6DDB3A',
    },
    {
        'name' : 'sky blue',
        'modalCode' : '#E5F7FF',
        'bgCode' : '#E5F7FF',
        'textCode' : '#88BAEA',
    },
    {
        'name' : 'dark gray',
        'modalCode' : '#828282',
        'bgCode' : '#828282',
        'textCode' : '#FFFFFF',
    },
]
# request status 상태값 variables 여기에 정의하기

STATICFILES_DIRS=[
    os.path.join(BASE_DIR, 'accounts', 'static')
] #static 파일들이 어디에 있는지를 쓰는곳

AUTH_USER_MODEL = 'accounts.User'

LOGOUT_REDIRECT_URL = '/todotodo/index.html'